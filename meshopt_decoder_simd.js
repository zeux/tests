// This file is part of meshoptimizer library and is distributed under the terms of MIT License.
// Copyright (C) 2016-2019, by Arseny Kapoulkine (arseny.kapoulkine@gmail.com)
var MeshoptDecoder = (function() {
	"use strict";
	var wasm = "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";

	var instance, heap;

	var env = {
		emscripten_notify_memory_growth: function(index) {
			heap = new Uint8Array(instance.exports.memory.buffer);
		}
	};

	var promise =
		(typeof fetch === 'function' ?
			fetch('data:application/octet-stream;base64,' + wasm)
			.then(response => response.arrayBuffer()) :
			Promise.resolve(Buffer.from(wasm, 'base64').buffer))
		.then(bytes => WebAssembly.instantiate(bytes, { env }))
		.then(function(result) {
			instance = result.instance;
			if (instance.exports.__wasm_call_ctors) {
				instance.exports.__wasm_call_ctors();
			}
			env.emscripten_notify_memory_growth(0);
		});

	function decode(fun, target, count, size, source) {
		var sbrk = instance.exports.sbrk;
		var tp = sbrk(count * size);
		var sp = sbrk(source.length);
		heap.set(source, sp);
		var res = fun(tp, count, size, sp, source.length);
		target.set(heap.subarray(tp, tp + count * size));
		sbrk(tp - sbrk(0));
		if (res != 0) {
			throw new Error("Malformed buffer data: " + res);
		}
	};

	return {
		ready: promise,
		decodeVertexBuffer: function(target, count, size, source) {
			console.time('decodeVertexBuffer');
			decode(instance.exports.meshopt_decodeVertexBuffer, target, count, size, source);
			console.timeEnd('decodeVertexBuffer');
		},
		decodeIndexBuffer: function(target, count, size, source) {
			decode(instance.exports.meshopt_decodeIndexBuffer, target, count, size, source);
		}
	};
})();

if (typeof exports === 'object' && typeof module === 'object')
	module.exports = MeshoptDecoder;
else if (typeof define === 'function' && define['amd'])
	define([], function() {
		return MeshoptDecoder;
	});
else if (typeof exports === 'object')
	exports["MeshoptDecoder"] = MeshoptDecoder;
